
package com.mycompany.drturnosgui;

import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

// Interfaz grafica para modificar los datos de un paciente:

public class ModificarClienteGUI extends javax.swing.JFrame {
    private Set<ObraSocial> obrasSociales;
    private Set<Cliente> clientes;
    private DefaultTableModel model;
    private int selectedRow;
    
    /**
     * Creates new form ModificarClienteGUI
     */
    public ModificarClienteGUI(Set<ObraSocial> obrasSociales, Set<Cliente> clientes,DefaultTableModel model, int selectedRow) {
        this.obrasSociales = obrasSociales;
        this.clientes = clientes;
        this.model = model;
        this.selectedRow = selectedRow;
        
        initComponents();
        
        //Agregar las obras sociales cargadas al combo box
        for (ObraSocial obraSocial : obrasSociales) {
             obraSocialComboBox.addItem(obraSocial.getObraSocial());
        }
        
        //Toma los valores de la fila seleccionada (datos del cliente seleccionado) 
        //y los asigna a los campos de texto de la interfaz
        campoDni.setText((String) model.getValueAt(selectedRow, 0));
        campoNombre.setText((String) model.getValueAt(selectedRow, 1));
        campoTelefono.setText((String) model.getValueAt(selectedRow, 2));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        campoDni = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        obraSocialComboBox = new javax.swing.JComboBox<>();
        campoTelefono = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        campoNombre = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 204));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));

        jLabel3.setText("Teléfono:");

        btnGuardar.setBackground(new java.awt.Color(0, 204, 153));
        btnGuardar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre y apellido:");

        jLabel4.setText("Obra social:");

        jLabel1.setText("DNI:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGuardar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(obraSocialComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campoTelefono)
                            .addComponent(campoNombre)
                            .addComponent(campoDni)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4))
                                .addGap(0, 441, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(campoTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(obraSocialComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnGuardar)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        modificarCliente();
    }//GEN-LAST:event_btnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JTextField campoDni;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JTextField campoTelefono;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> obraSocialComboBox;
    // End of variables declaration//GEN-END:variables

//Metodos
    
    /**
     * Metodo para actualizar los datos en el Set y la tabla
     */
    private void modificarCliente() {
        String dni = campoDni.getText();
        String nombre = campoNombre.getText();
        String telefono = campoTelefono.getText();
        String obraSocial = (String) obraSocialComboBox.getSelectedItem();

        //Validar DNI: Debe contener solo numeros
        if (!dni.matches("\\d+")) {
        showError("El DNI debe contener solo números.");
        return;
        }

        // Validación de Nombre: No debe contener números
        if (nombre.matches(".*\\d.*")) {
        showError("El Nombre no debe contener números.");
        return;
        }


        // Validación de Teléfono: Solo permite números
         if (!telefono.matches("\\d+")) {
            showError("El Teléfono debe contener solo números.");
            return;
        }  
        
         // Obtiene el DNI actual del cliente seleccionado
        String dniActual = (String) model.getValueAt(selectedRow, 0);

        // Verifica que el nuevo dni ingresado no esté ya en el Set, si ya esta cargado muestra un mensaje de error
        if (!dniActual.equals(dni)) {
            for (Cliente clienteExistente : clientes) {
                if (clienteExistente.getDni().equals(dni)) {
                    showError("Ya existe un cliente registrado con el mismo DNI."); 
                    return;
                }
            }
        }   

        // Realizar la modificación en el Set después de las validaciones
        if (isAlphanumeric(nombre) && isAlphanumeric(telefono)) {
            for (Cliente cliente : clientes) {
                if (cliente.getDni().equals(dniActual)){
                    cliente.setDni(dni);
                    cliente.setNombre(nombre);
                    cliente.setTelefono(telefono);
                    cliente.setObraSocial(obraSocial);
                    break;
                }
            }    
        } else {
            if (!isAlphanumeric(nombre)) {
                showError("El nombre solo puede contener letras");
                return;
            }
            if (!isAlphanumeric(telefono)) {
                showError("El telefono solo puede contener numeros");
                return;
            }
        }
        
            /*model.setValueAt(dni, selectedRow, 0);
            model.setValueAt(nombre, selectedRow, 1);
            model.setValueAt(telefono, selectedRow, 2);
            model.setValueAt(obraSocial, selectedRow, 3);*/
            ClientesGUI cli = new ClientesGUI(clientes, obrasSociales);
            cli.setVisible(true);
            dispose();
        }

    /**
     * Metodo que muestra el error en pantalla
     * @param message, mensaje que va a mostrar por pantalla
     */
    private void showError(String message) {
        JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    /**
     * Verifica si contiene solo caracteres alfanumericos
     * @param str
     * @return 
     */
    public boolean isAlphanumeric(String str){

        char[] charArray = str.toCharArray();
        for(char c:charArray)
        {
            if (!Character.isLetterOrDigit(c) && !Character.isWhitespace(c))
                return false;
        }
        return true;
    }
    
}
